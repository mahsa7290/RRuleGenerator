<ui:FluentWindow x:Class="RRuleGenerator.MainWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:lex="http://wpflocalizeextension.codeplex.com"
                 xmlns:ical="clr-namespace:Ical.Net;assembly=Ical.Net" xmlns:rrulegenerator="clr-namespace:RRuleGenerator"
                 lex:LocalizeDictionary.DesignCulture="en"
        lex:LocalizeDictionary.IncludeInvariantCulture="False"
        lex:ResxLocalizationProvider.DefaultAssembly="RRuleGenerator"
        lex:ResxLocalizationProvider.DefaultDictionary="Strings"
        mc:Ignorable="d"
        ExtendsContentIntoTitleBar="True"
        WindowBackdropType="Mica"
        Title="MainWindow"
        MinWidth="600"
        Height="750" Width="1000">
    <Window.DataContext>
        <rrulegenerator:MainViewModel />
    </Window.DataContext>
    <Grid Name="MainContent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <ui:TitleBar Grid.Row="0" Background="#3c3c3c"/>
        <ScrollViewer Grid.Row="1" Margin="0 -20 0 0">
            <ScrollViewer.Resources>
                <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="FontWeight" Value="SemiBold" />
                </Style>
            </ScrollViewer.Resources>
            <Grid>
                <StackPanel>
                    <Border Background="#3c3c3c" Height="40">
                        <Grid>
                            <StackPanel Margin="20 0 0 0" Orientation="Horizontal">
                                <Label Content="Language:" Margin="0 4 10 0" VerticalAlignment="Top"/>
                                <ComboBox ItemsSource="{Binding Languages}" SelectedItem="{Binding SelectedLanguage}" VerticalAlignment="Top" Padding="5" SelectionChanged="ComboBox_SelectionChanged" Width="150" />
                            </StackPanel>
                            <TextBlock Text="WPF RRule Generator" FontSize="20" FontWeight="SemiBold" VerticalAlignment="Top" HorizontalAlignment="Center" />
                        </Grid>
                    </Border>
                    <StackPanel Margin="0 30 0 0" Width="765" HorizontalAlignment="Center">
                        <Label Content="&lt;RRuleGenerator /&gt;" FontSize="16" FontWeight="SemiBold" />
                        <Border CornerRadius="5" Padding="30 20" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="30" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="10" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Label Content="{lex:Loc Start}" Grid.Row="0" Grid.Column="0" />
                                <DatePicker x:Name="datePicker" Grid.Row="0" Grid.Column="2" SelectedDate="{Binding StartDate, UpdateSourceTrigger=PropertyChanged}" SelectedDateFormat="Short" />

                                <Rectangle Grid.Row="1" Grid.ColumnSpan="3" Height="1" Margin="-30 0" Fill="{StaticResource BorderBrush}" />

                                <Label Content="{lex:Loc Repeat}" Grid.Row="2" Grid.Column="0" />
                                <ComboBox Grid.Row="2" Grid.Column="2"  SelectedItem="{Binding SelectedFrequency}" ItemsSource="{Binding Frequencies}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding ., Converter={StaticResource EnumToStringConverter}}" />
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                                <!--Hourly-->
                                <StackPanel
                                    Grid.Column="2"
                                    Grid.Row="3"
                                    Orientation="Horizontal"
                                    Visibility="{Binding SelectedFrequency,
                                            Converter={StaticResource EqualToVisibilityConverter},
                                            ConverterParameter={x:Static ical:FrequencyType.Hourly}}">
                                    <Label Content="{lex:Loc Every}" />
                                    <TextBox Width="150" Margin="10" Text="{Binding Interval, UpdateSourceTrigger=PropertyChanged}" />
                                    <Label Content="{lex:Loc Hours}" />
                                </StackPanel>

                                <!--Daily-->
                                <StackPanel
                                    Grid.Column="2"
                                    Grid.Row="3"
                                    Orientation="Horizontal"
                                    Visibility="{Binding SelectedFrequency,
                                            Converter={StaticResource EqualToVisibilityConverter},
                                            ConverterParameter={x:Static ical:FrequencyType.Daily}}">
                                    <Label Content="{lex:Loc Every}" />
                                    <TextBox Width="150" Margin="10" Text="{Binding Interval, UpdateSourceTrigger=PropertyChanged}" />
                                    <Label Content="{lex:Loc Days}" />
                                </StackPanel>

                                <!--Weekly-->
                                <StackPanel
                                    Grid.Column="2"
                                    Grid.Row="3"
                                    Visibility="{Binding SelectedFrequency,
                                                Converter={StaticResource EqualToVisibilityConverter},
                                                ConverterParameter={x:Static ical:FrequencyType.Weekly}}">
                                    <WrapPanel>
                                        <Label Content="{lex:Loc Every}" />
                                        <TextBox Width="150" Margin="10" Text="{Binding Interval, UpdateSourceTrigger=PropertyChanged}" />
                                        <Label Content="{lex:Loc Weeks}" />
                                    </WrapPanel>

                                    <UniformGrid Columns="7">
                                        <UniformGrid.Resources>
                                            <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                                <Setter Property="Width" Value="Auto" />
                                                <Setter Property="Height" Value="30" />
                                                <Setter Property="Padding" Value="0" />
                                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                            </Style>
                                        </UniformGrid.Resources>
                                        <ToggleButton Content="{lex:Loc Monday}" IsChecked="{Binding WeeklyRepeatModel.IsMonday, Mode=TwoWay}" />
                                        <ToggleButton Content="{lex:Loc Tuesday}" IsChecked="{Binding WeeklyRepeatModel.IsTuesday, Mode=TwoWay}" />
                                        <ToggleButton Content="{lex:Loc Wednesday}" IsChecked="{Binding WeeklyRepeatModel.IsWednesday, Mode=TwoWay}" />
                                        <ToggleButton Content="{lex:Loc Thursday}" IsChecked="{Binding WeeklyRepeatModel.IsThursday, Mode=TwoWay}" />
                                        <ToggleButton Content="{lex:Loc Friday}" IsChecked="{Binding WeeklyRepeatModel.IsFriday, Mode=TwoWay}" />
                                        <ToggleButton Content="{lex:Loc Saturday}" IsChecked="{Binding WeeklyRepeatModel.IsSaturday, Mode=TwoWay}" />
                                        <ToggleButton Content="{lex:Loc Sunday}" IsChecked="{Binding WeeklyRepeatModel.IsSunday, Mode=TwoWay}" />
                                    </UniformGrid>
                                </StackPanel>

                                <!--Monthly-->
                                <StackPanel
                                        Grid.Column="2"
                                        Grid.Row="3"
                                        Visibility="{Binding SelectedFrequency,
                                                Converter={StaticResource EqualToVisibilityConverter},
                                                ConverterParameter={x:Static ical:FrequencyType.Monthly}}">
                                    <WrapPanel>
                                        <Label Content="{lex:Loc Every}" />
                                        <TextBox Width="150" Margin="10" Text="{Binding Interval, UpdateSourceTrigger=PropertyChanged}" />
                                        <Label Content="{lex:Loc Months}" />
                                    </WrapPanel>

                                    <WrapPanel>
                                        <RadioButton Content="{lex:Loc OnDay}" IsChecked="{Binding SelectedType}" />
                                        <ComboBox Width="150" Margin="10"
                                                  IsEnabled="{Binding SelectedType}"
                                                  ItemsSource="{Binding MonthlyRepeatModel.DaysOfMonth}" SelectedItem="{Binding MonthlyRepeatModel.SelectedDay}">
                                           
                                        </ComboBox>
                                    </WrapPanel>
                                    <StackPanel>
                                        <WrapPanel>
                                            <RadioButton Content="{lex:Loc OnThe}" IsChecked="{Binding SelectedType, Converter={StaticResource InverseBooleanConverter}}" />
                                            <ComboBox
                                                IsEnabled="{Binding SelectedType, Converter={StaticResource InverseBooleanConverter}}"
                                                Width="150" Margin="10" ItemsSource="{Binding MonthlyRepeatModel.FrequencyOccurrences}" SelectedItem="{Binding MonthlyRepeatModel.SelectedFrequencyOccurrence}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding ., Converter={StaticResource EnumToStringConverter}}" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>

                                            <ComboBox
                                                IsEnabled="{Binding SelectedType, Converter={StaticResource InverseBooleanConverter}}"
                                                Width="150" Margin="10" ItemsSource="{Binding WeeklyRepeatModel.WeekDays}" SelectedItem="{Binding WeeklyRepeatModel.SelectedWeekDays}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding ., Converter={StaticResource EnumToStringConverter}}" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </WrapPanel>
                                    </StackPanel>
                                </StackPanel>

                                <!--Yearly-->
                                <StackPanel
        Grid.Column="2"
        Grid.Row="3"
        Visibility="{Binding SelectedFrequency,
                Converter={StaticResource EqualToVisibilityConverter},
                ConverterParameter={x:Static ical:FrequencyType.Yearly}}">

                                    <WrapPanel>
                                        <RadioButton Content="{lex:Loc OnDay}" IsChecked="{Binding SelectedType}" />
                                        <ComboBox Width="150" Margin="10"
                  IsEnabled="{Binding SelectedType}"
                  ItemsSource="{Binding YearlyRepeatModel.MonthNames}" SelectedIndex="{Binding YearlyRepeatModel.SelectedMonth}">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding ., Converter={StaticResource EnumToStringConverter}}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <ComboBox Width="150" Margin="10"
IsEnabled="{Binding SelectedType}"
ItemsSource="{Binding YearlyRepeatModel.DaysOfMonth}" SelectedItem="{Binding YearlyRepeatModel.SelectedDay}">
                                            
                                        </ComboBox>
                                    </WrapPanel>
                                    <StackPanel>
                                        <WrapPanel>
                                            <RadioButton Content="{lex:Loc OnThe}" IsChecked="{Binding SelectedType, Converter={StaticResource InverseBooleanConverter}}" />
                                            <ComboBox
                IsEnabled="{Binding SelectedType, Converter={StaticResource InverseBooleanConverter}}"
                Width="150" Margin="10" ItemsSource="{Binding MonthlyRepeatModel.FrequencyOccurrences}" SelectedItem="{Binding MonthlyRepeatModel.SelectedFrequencyOccurrence}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding ., Converter={StaticResource EnumToStringConverter}}" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>

                                            <ComboBox
                IsEnabled="{Binding SelectedType, Converter={StaticResource InverseBooleanConverter}}"
                Width="150" Margin="10" ItemsSource="{Binding WeeklyRepeatModel.WeekDays}" SelectedItem="{Binding WeeklyRepeatModel.SelectedWeekDays}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding ., Converter={StaticResource EnumToStringConverter}}" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>

                                            <Label Content="{lex:Loc Of}" />
                                            
                                            <ComboBox Width="150" Margin="10"
                IsEnabled="{Binding SelectedType, Converter={StaticResource InverseBooleanConverter}}"
ItemsSource="{Binding YearlyRepeatModel.MonthNames}" SelectedIndex="{Binding YearlyRepeatModel.SelectedMonth}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding ., Converter={StaticResource EnumToStringConverter}}" />
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </WrapPanel>
                                    </StackPanel>
                                </StackPanel>

                                <Rectangle Grid.Row="5" Grid.ColumnSpan="3" Height="1" Margin="-30 30" Fill="{StaticResource BorderBrush}" />

                                <Label Content="{lex:Loc End}" Grid.Row="6" Grid.Column="0" />
                                <WrapPanel Grid.Row="6" Grid.Column="2">
                                    <ComboBox Width="300"  SelectedItem="{Binding SelectedEndType}" ItemsSource="{Binding EndTypes}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding ., Converter={StaticResource EnumToStringConverter}}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <TextBox  Width="200" Margin="10 0" Text="{Binding AfterExecutionNumber, UpdateSourceTrigger=PropertyChanged}" 
                                              Visibility="{Binding SelectedEndType, Converter={StaticResource EqualToVisibilityConverter}, ConverterParameter={x:Static rrulegenerator:EndTypeEnum.After}}"
                                              />

                                    <Label  Content="Executions."
                                           Visibility="{Binding SelectedEndType, Converter={StaticResource EqualToVisibilityConverter}, ConverterParameter={x:Static rrulegenerator:EndTypeEnum.After}}"
                                           />
                                    <DatePicker  SelectedDate="{Binding Until}" Margin="10 0" Width="300"
                                                 SelectedDateFormat="Short"
                                                 Visibility="{Binding SelectedEndType, Converter={StaticResource EqualToVisibilityConverter}, ConverterParameter={x:Static rrulegenerator:EndTypeEnum.OnDate}}"
                                                 />
                                </WrapPanel>
                                
                            </Grid>
                        </Border>
                    </StackPanel>

                    <Border CornerRadius="5" Width="765" Margin="0 30 0 0" Padding="30 20" BorderThickness="1" BorderBrush="{StaticResource BorderBrush}">
                        <WrapPanel>
                            <Label Content="RRule" FontSize="16" FontWeight="SemiBold" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding RRule, UpdateSourceTrigger=PropertyChanged}" AcceptsReturn="true" Margin="20 20 10 20" AcceptsTab="true" Width="550" MinHeight="60"/>

                            <Button Content="{Binding CopyContent}" Width="80" ToolTip="Copy To Clipboard" Command="{Binding CopyCommand}" />
                        </WrapPanel>
                    </Border>
                </StackPanel>
            </Grid>
        </ScrollViewer>
    </Grid>
</ui:FluentWindow>